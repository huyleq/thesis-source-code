#!/usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
from seppyio import *

ntrace,otrace=from_header('observed','n2','o2')
nt,ot,dt=from_header('observed','n1','o1','d1')
observed=read('observed',(ntrace,nt))
observed=np.transpose(observed)
modeled=read('modeled',(ntrace,nt))
modeled=np.transpose(modeled)

fig,ax=plt.subplots(1,2,sharey=True)
plt.subplots_adjust(wspace=0,hspace=0)

temp=searchArgv('colormap')
if temp==False: 
    colormap='gray' 
else:
    colormap=temp
    
temp=searchArgv('fontsize')
if temp==False:
    sz=15
else:
    sz=float(temp)
ax[0].tick_params(labelsize=sz,pad=0.5*sz)
ax[1].tick_params(labelsize=sz,pad=0.5*sz)

temp=searchArgv('xlabel')
if temp==False: 
    xlabel=' ' 
else:
    xlabel=temp

temp=searchArgv('ylabel')
if temp==False: 
    ylabel=' ' 
else:
    ylabel=temp

temp=searchArgv('maxval')
if temp==False: 
    maxval=np.max(observed) 
else:
    maxval=float(temp)

temp=searchArgv('minval')
if temp==False: 
    minval=np.min(observed) 
else:
    minval=float(temp)

ax[0].imshow(observed,interpolation='none',aspect='auto',extent=[otrace,otrace+(ntrace-1)*1,ot+(nt-1)*dt,ot],vmin=minval,vmax=maxval,cmap=colormap)
ax[0].set_xlabel('trace number',fontsize=sz)
ax[0].set_ylabel('t (s)',fontsize=sz)

ax[1].imshow(np.flip(modeled,axis=1),interpolation='none',aspect='auto',extent=[otrace+(ntrace-1)*1,otrace,ot+(nt-1)*dt,ot],vmin=minval,vmax=maxval,cmap=colormap)
ax[1].set_xlabel('trace number',fontsize=sz)

temp=searchArgv('out')
if temp==False: 
    plt.show()
else:
    plt.savefig(temp,bbox_inches='tight')

