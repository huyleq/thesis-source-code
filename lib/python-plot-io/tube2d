#!/usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
from seppyio import *

filename=searchArgv('hfile') 

n1,o1,d1=from_header('hfile','n1','o1','d1')
n2,o2,d2=from_header('hfile','n2','o2','d2')
n3,o3,d3=from_header('hfile','n3','o3','d3')
n1=int(n1)
n2=int(n2)
n3=int(n3)

a0=read('hfile',(n3,n2,n1))
j3=int(get_param('j3'))
if j3==False:
    j3=1
n3_new=int((n3-1)/j3+1)
a=np.zeros((n3_new,n2,n1))
for i in range(n3_new):
    a[i,:,:]=a0[i*j3,:,:]

curr_pos = 0

def key_event(e):
    global curr_pos

    if e.key == "right":
        curr_pos = curr_pos + 1
    elif e.key == "left":
        curr_pos = curr_pos - 1
    else:
        return
    curr_pos = curr_pos % n3_new

    ax.cla()
    cax=ax.imshow(a[curr_pos,:,:],interpolation='none',aspect='auto',extent=[o1,o1+(n1-1)*d1,o2+(n2-1)*d2,o2],vmin=minv,vmax=maxv,cmap=colormap)
    ax.set_xlabel(xlabel,fontsize=sz)
    ax.set_ylabel(ylabel,fontsize=sz)
    ax.set_title(str(curr_pos),fontsize=sz)
    fig.canvas.draw()

fig = plt.figure()
ax = fig.add_subplot(111)
fig.canvas.mpl_connect('key_press_event', key_event)

temp=get_param('scalefactor')
if temp!=False:
    a=a*temp

min1=get_param('min1')
if isinstance(min1,float):
    b1=int((min1-o1)/d1)
else:
    b1=0

max1=get_param('max1')
if max1!=False:
    e1=int((max1-o1)/d1)
else:
    e1=n1
o1=min1
n1=e1-b1

min2=get_param('min2')
if min2!=False:
    b2=int((min2-o2)/d2)
else:
    b2=0

max2=get_param('max2')
if max2!=False:
    e2=int((max2-o2)/d2)
else:
    e2=n2
o2=min2
n2=e2-b2

a=a[:,b2:e2,b1:e1]

transp=searchArgv('transp')
if transp=='y': 
    a=np.transpose(a)
    n=n1
    n1=n2
    n2=n
    o=o1
    o1=o2
    o2=o
    d=d1
    d1=d2
    d2=d

temp=searchArgv('maxv')
if temp==False: 
    maxv=np.max(a) 
else:
    maxv=float(temp)

temp=searchArgv('minv')
if temp==False: 
    minv=np.min(a) 
else:
    minv=float(temp)

temp=searchArgv('colormap')
if temp==False: 
    colormap='gray' 
else:
    colormap=temp
    
temp=searchArgv('fontsize')
if temp==False:
    sz=15
else:
    sz=float(temp)
ax.tick_params(labelsize=sz,pad=0.5*sz)

temp=searchArgv('xlabel')
if temp==False: 
    xlabel=' ' 
else:
    xlabel=temp

temp=searchArgv('ylabel')
if temp==False: 
    ylabel=' ' 
else:
    ylabel=temp

cax=ax.imshow(a[0,:,:],interpolation='none',aspect='auto',extent=[o1,o1+(n1-1)*d1,o2+(n2-1)*d2,o2],vmin=minv,vmax=maxv,cmap=colormap)

temp=searchArgv('colorbar')
if temp=='y': 
    avev=0.5*(minv+maxv)
    cbar=fig.colorbar(cax,ticks=[minv,0.5*(minv+avev),avev,0.5*(avev+maxv),maxv])
    cbar.ax.tick_params(labelsize=sz,pad=0.5*sz) 
    
ax.set_xlabel(xlabel,fontsize=sz)
ax.set_ylabel(ylabel,fontsize=sz)
ax.set_title(str(0),fontsize=sz)

plt.show()
